#!/bin/bash

echo "üöÄ –î–µ–ø–ª–æ–π ITM Marketplace –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"
echo "======================================"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üì¶ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down

# –û—á–∏—Å—Ç–∏—Ç—å Docker cache
echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker cache..."
docker system prune -f

# –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ —Ö–æ—Å—Ç–µ
echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ —Ö–æ—Å—Ç–µ..."
cd frontend

# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
echo "üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
rm -rf node_modules package-lock.json
npm cache clean --force
npm install --legacy-peer-deps --force

# –°–æ–±—Ä–∞—Ç—å production build
echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ production build..."
rm -rf build

# –û—Ç–∫–ª—é—á–∞–µ–º TypeScript –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ ajv
export TSC_COMPILE_ON_ERROR=true
export SKIP_PREFLIGHT_CHECK=true
export GENERATE_SOURCEMAP=false

npm run build

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
if [ ! -d "build" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Å–±–æ—Ä–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–ª–∞—Å—å!"
    exit 1
fi

echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!"

# –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd ..

# –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose up -d --build

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5
docker compose ps

echo ""
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞: http://asdsoft-demo.ru"
echo "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: docker compose ps"
echo "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏: docker compose logs -f"

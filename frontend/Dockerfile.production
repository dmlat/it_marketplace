# Multi-stage build для production
FROM node:18-alpine as build

WORKDIR /usr/src/app

# Устанавливаем git для некоторых npm пакетов
RUN apk add --no-cache git

# Копируем package.json и package-lock.json (если есть)
COPY package*.json ./

# Очищаем npm cache и устанавливаем зависимости
RUN npm cache clean --force
RUN npm install --legacy-peer-deps --no-optional

# Копируем исходный код
COPY . .

# Устанавливаем переменные окружения для сборки
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false

# Собираем приложение
RUN npm run build

# Production stage с nginx
FROM nginx:alpine

# Копируем собранное приложение
COPY --from=build /usr/src/app/build /usr/share/nginx/html

# Копируем конфигурацию nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Открываем порт
EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production.simple
    ports:
      - "3000:3000"
    networks:
      - itm-network
    depends_on:
      - users-service
      - companies-service
      - operator-service
    restart: unless-stopped

  postgres-db:
    image: postgres:14-alpine
    container_name: itm-postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-itm_db}
    ports:
      - "5500:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - itm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-itm_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Пример для users-service. Остальные сервисы будут добавляться по аналогии.
  users-service:
    build:
      context: ./services/users-service
      dockerfile: Dockerfile
    container_name: itm-users-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres-db:5432/${POSTGRES_DB:-itm_db}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}

    command: npm start
    networks:
      - itm-network

  operator-service:
    build:
      context: ./services/operator-service
      dockerfile: Dockerfile
    container_name: itm-operator-service
    restart: unless-stopped
    ports:
      - "8002:8002"
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres-db:5432/${POSTGRES_DB:-itm_db}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}

    command: npm start
    networks:
      - itm-network

  companies-service:
    build:
      context: ./services/companies-service
      dockerfile: Dockerfile
    container_name: itm-companies-service
    restart: unless-stopped
    ports:
      - "8003:8003"
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres-db:5432/${POSTGRES_DB:-itm_db}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}

    command: npm start
    networks:
      - itm-network

networks:
  itm-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
